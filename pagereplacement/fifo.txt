#include <stdio.h>

int findPage(int page, int frames[], int n) {
    for(int i = 0; i < n; i++) {
        if(frames[i] == page)
            return 1;
    }
    return 0;
}

void fifoPageReplacement(int pages[], int n, int capacity) {
    int frames[capacity];
    int front = 0;
    int pageFaults = 0;
    
    // Initialize frames with -1
    for(int i = 0; i < capacity; i++) {
        frames[i] = -1;
    }
    
    for(int i = 0; i < n; i++) {
        printf("\nFor page %d: ", pages[i]);
        
        // If page not found in frames
        if(!findPage(pages[i], frames, capacity)) {
            frames[front] = pages[i];
            front = (front + 1) % capacity;
            pageFaults++;
            
            printf("Page Fault! Frames: ");
        } else {
            printf("Page Hit! Frames: ");
        }
        
        // Print current frames
        for(int j = 0; j < capacity; j++) {
            if(frames[j] != -1)
                printf("%d ", frames[j]);
            else
                printf("- ");
        }
    }
    printf("\nTotal Page Faults: %d\n", pageFaults);
}

int main() {
    int pages[] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3, 0, 3, 2};
    int n = sizeof(pages)/sizeof(pages[0]);
    int capacity = 4;
    
    printf("FIFO Page Replacement Algorithm\n");
    fifoPageReplacement(pages, n, capacity);
    return 0;
}