#include <stdio.h>
#include <stdlib.h>

int main() {
    int queue[100], n, head, seek = 0, max;
    float avg;

    // Input validation for disk range
    do {
        printf("Enter the max range of disk (1-999): ");
        scanf("%d", &max);
    } while (max <= 0 || max > 999);

    // Input validation for queue size
    do {
        printf("Enter the size of queue request (1-99): ");
        scanf("%d", &n);
    } while (n <= 0 || n > 99);

    // Input validation for queue positions
    printf("Enter the queue of disk positions to be read:\n");
    for(int i = 0; i < n; i++) {
        do {
            scanf("%d", &queue[i]);
            if(queue[i] < 0 || queue[i] >= max) {
                printf("Invalid position. Enter a value between 0 and %d: ", max-1);
            }
        } while(queue[i] < 0 || queue[i] >= max);
    }

    // Input validation for initial head position
    do {
        printf("Enter the initial head position (0-%d): ", max-1);
        scanf("%d", &head);
    } while(head < 0 || head >= max);

    // Insert head position at the beginning
    for(int i = n; i > 0; i--) {
        queue[i] = queue[i-1];
    }
    queue[0] = head;

    printf("\nSequence of head movement:\n");
    for(int j = 0; j < n; j++) {
        int diff = abs(queue[j+1] - queue[j]);
        seek += diff;
        printf("Disk head moves from %d to %d with seek %d\n", 
               queue[j], queue[j+1], diff);
    }

    printf("\nTotal seek time: %d\n", seek);
    avg = (float)seek / n;
    printf("Average seek time: %.2f\n", avg);

    return 0;
}